python_preamble:
- import: base64
- import: re
- import: google.appengine.ext.bulkload.transform
- import: google.appengine.ext.bulkload.bulkloader_wizard
- import: google.appengine.ext.db
- import: google.appengine.api.datastore
- import: google.appengine.api.users


transformers:

- kind: zBubble
  connector: csv
  connector_options:
    #encoding: utf16
  property_map:
    - property: __key__
      external_name: key_name
      import_transform: transform.create_foreign_key('zBubble')

    - property: order
      external_name: order
      import_transform: transform.none_if_empty(int)

    - property: name_estonian
      external_name: name_estonian
      import_transform: transform.none_if_empty(unicode)

    - property: name_english
      external_name: name_english
      import_transform: transform.none_if_empty(unicode)

    - property: description_estonian
      external_name: description_estonian
      import_transform: db.Text

    - property: description_english
      external_name: description_english
      import_transform: db.Text

    - property: start_datetime
      external_name: start_datetime
      import_transform: transform.import_date_time('%Y-%m-%d %H:%M:%S')

    - property: end_datetime
      external_name: end_datetime
      import_transform: transform.import_date_time('%Y-%m-%d %H:%M:%S')

    - property: location
      external_name: location
      import_transform: transform.none_if_empty(unicode)

    - property: owner
      external_name: owner
      import_transform: transform.none_if_empty(unicode)

    - property: editors
      external_name: editors
      import_transform: transform.none_if_empty(unicode)

    - property: viewers
      external_name: viewers
      import_transform: transform.none_if_empty(unicode)

    - property: type
      external_name: type
      import_transform: transform.none_if_empty(unicode)

    - property: typed_tags
      external_name: typed_tags
      import_transform: transform.none_if_empty(unicode)

    - property: rating_scale
      external_name: rating_scale
      import_transform: transform.none_if_empty(unicode)

    - property: badge_estonian
      external_name: badge_estonian
      import_transform: transform.none_if_empty(unicode)

    - property: badge_english
      external_name: badge_english
      import_transform: transform.none_if_empty(unicode)

    - property: points
      external_name: points
      import_transform: transform.none_if_empty(float)

    - property: minimum_points
      external_name: minimum_points
      import_transform: transform.none_if_empty(float)

    - property: minimum_bubble_count
      external_name: minimum_bubble_count
      import_transform: transform.none_if_empty(int)

    - property: mandatory_bubbles
      external_name: mandatory_bubbles
      import_transform: transform.none_if_empty(unicode)

    - property: optional_bubbles
      external_name: optional_bubbles
      import_transform: db.Text

    - property: prerequisite_bubbles
      external_name: prerequisite_bubbles
      import_transform: transform.none_if_empty(unicode)

    - property: state
      external_name: state
      import_transform: transform.none_if_empty(unicode)

    - property: entities
      external_name: entities
      import_transform: transform.none_if_empty(unicode)


- kind: zBubbleType
  connector: csv
  connector_options:
    #encoding: utf16
  property_map:
    - property: __key__
      external_name: key_name
      import_transform: transform.create_foreign_key('zBubbleType')

    - property: type
      external_name: type
      import_transform: transform.none_if_empty(unicode)

    - property: name_estonian
      external_name: name_estonian
      import_transform: transform.none_if_empty(unicode)

    - property: name_english
      external_name: name_english
      import_transform: transform.none_if_empty(unicode)

    - property: description_estonian
      external_name: description_estonian
      import_transform: transform.none_if_empty(unicode)

    - property: description_english
      external_name: description_english
      import_transform: transform.none_if_empty(unicode)

    - property: allowed_subtypes
      external_name: allowed_subtypes
      import_transform: transform.none_if_empty(unicode)

    - property: grade_display_method
      external_name: grade_display_method
      import_transform: transform.none_if_empty(unicode)


- kind: zContact
  connector: csv
  connector_options:
    #encoding: utf16
  property_map:
    - property: __key__
      external_name: key_name
      import_transform: transform.create_foreign_key('zContact')

    - property: person
      external_name: person
      import_transform: transform.none_if_empty(unicode)

    - property: type
      external_name: type
      import_transform: transform.none_if_empty(unicode)

    - property: value
      external_name: value
      import_transform: transform.none_if_empty(unicode)


- kind: zGrade
  connector: csv
  connector_options:
    #encoding: utf16
  property_map:
    - property: __key__
      external_name: key_name
      import_transform: transform.create_foreign_key('zGrade')

    - property: person
      external_name: person
      import_transform: transform.none_if_empty(unicode)

    - property: bubble
      external_name: bubble
      import_transform: transform.none_if_empty(unicode)

    - property: datetime
      external_name: datetime
      import_transform: transform.import_date_time('%Y-%m-%d %H:%M:%S')

    - property: name_estonian
      external_name: name_estonian
      import_transform: transform.none_if_empty(unicode)

    - property: name_english
      external_name: name_english
      import_transform: transform.none_if_empty(unicode)

    - property: is_positive
      external_name: is_positive
      import_transform: transform.regexp_bool('true', re.IGNORECASE)

    - property: equivalent
      external_name: equivalent
      import_transform: transform.none_if_empty(int)

    - property: credit_points
      external_name: credit_points
      import_transform: transform.none_if_empty(float)

    - property: school_name_estonian
      external_name: school_name_estonian
      import_transform: transform.none_if_empty(unicode)

    - property: school_name_english
      external_name: school_name_english
      import_transform: transform.none_if_empty(unicode)

    - property: teacher
      external_name: teacher
      import_transform: transform.none_if_empty(unicode)

    - property: teacher_name
      external_name: teacher_name
      import_transform: transform.none_if_empty(unicode)

    - property: bubbletype
      external_name: bubbletype
      import_transform: transform.none_if_empty(unicode)


- kind: zGradeDefinition
  connector: csv
  connector_options:
    #encoding: utf16
  property_map:
    - property: __key__
      external_name: key_name
      import_transform: transform.create_foreign_key('zGradeDefinition')

    - property: rating_scale
      external_name: rating_scale
      import_transform: transform.none_if_empty(unicode)

    - property: name_estonian
      external_name: name_estonian
      import_transform: transform.none_if_empty(unicode)

    - property: name_english
      external_name: name_english
      import_transform: transform.none_if_empty(unicode)

    - property: is_positive
      external_name: is_positive
      import_transform: transform.regexp_bool('true', re.IGNORECASE)

    - property: equivalent
      external_name: equivalent
      import_transform: transform.none_if_empty(int)


- kind: zPerson
  connector: csv
  connector_options:
    #encoding: utf16
  property_map:
    - property: __key__
      external_name: key_name
      import_transform: transform.create_foreign_key('zPerson')

    - property: user
      external_name: apps_username
      import_transform: transform.none_if_empty(unicode)

    - property: forename
      external_name: forename
      import_transform: transform.none_if_empty(unicode)

    - property: surname
      external_name: surname
      import_transform: transform.none_if_empty(unicode)

    - property: idcode
      external_name: idcode
      import_transform: transform.none_if_empty(unicode)

    - property: gender
      external_name: gender
      import_transform: transform.none_if_empty(unicode)

    - property: birth_date
      external_name: birth_date
      import_transform: transform.import_date_time('%Y-%m-%d')

    - property: leecher
      external_name: leecher
      import_transform: transform.none_if_empty(db.Text)

    - property: seeder
      external_name: seeder
      import_transform: transform.none_if_empty(db.Text)


- kind: zPersonRole
  connector: csv
  connector_options:
    #encoding: utf16
  property_map:
    - property: __key__
      external_name: key_name
      import_transform: transform.create_foreign_key('zPersonRole')

    - property: person
      external_name: person
      import_transform: transform.none_if_empty(unicode)

    - property: role
      external_name: role
      import_transform: transform.none_if_empty(unicode)

    - property: department
      external_name: department
      import_transform: transform.none_if_empty(unicode)


- kind: zRatingScale
  connector: csv
  connector_options:
    #encoding: utf16
  property_map:
    - property: __key__
      external_name: key_name
      import_transform: transform.create_foreign_key('zRatingScale')

    - property: name_estonian
      external_name: name_estonian
      import_transform: transform.none_if_empty(unicode)

    - property: name_english
      external_name: name_english
      import_transform: transform.none_if_empty(unicode)


- kind: zRole
  connector: csv
  connector_options:
    #encoding: utf16
  property_map:
    - property: __key__
      external_name: key_name
      import_transform: transform.create_foreign_key('zRole')

    - property: name_estonian
      external_name: name_estonian
      import_transform: transform.none_if_empty(unicode)

    - property: name_english
      external_name: name_english
      import_transform: transform.none_if_empty(unicode)

    - property: rights
      external_name: rights
      import_transform: transform.none_if_empty(unicode)

    - property: template_name
      external_name: template_name
      import_transform: transform.none_if_empty(unicode)









#    - property: is_published
#      external_name: is_published
#      import_transform: transform.regexp_bool('true', re.IGNORECASE)
































- kind: Contact
  connector: csv
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: person
      external_name: person
      import_transform: transform.create_foreign_key('Person')
      export_transform: transform.key_id_or_name_as_string

    - property: type
      external_name: type
      import_transform: transform.create_foreign_key('Dictionary')
      export_transform: transform.key_id_or_name_as_string

    - property: value
      external_name: value


- kind: Department
  connector: csv
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: academic
      external_name: academic
      import_transform: transform.regexp_bool('true', re.IGNORECASE)

    - property: is_academic
      external_name: is_academic
      import_transform: transform.regexp_bool('true', re.IGNORECASE)

    - property: name
      external_name: name
      import_transform: transform.create_foreign_key('Dictionary')
      export_transform: transform.key_id_or_name_as_string

    - property: parent_department
      external_name: parent_department
      import_transform: transform.create_foreign_key('Department')
      export_transform: transform.key_id_or_name_as_string
